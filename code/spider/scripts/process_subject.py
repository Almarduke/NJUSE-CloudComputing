import pandas as pd

_arxiv_categories = {
    'AI': 'Artificial Intelligence',
    'CC': 'Computational Complexity',
    'CG': 'Computational Geometry',
    'CE': 'Computational Engineering, Finance, and Science',
    'CL': 'Computation and Language (Computational Linguistics and Natural Language and Speech '
          'Processing)',
    'CV': 'Computer Vision and Pattern Recognition',
    'CY': 'Computers and Society',
    'CR': 'Cryptography and Security',
    'DB': 'Databases',
    'DS': 'Data Structures and Algorithms',
    'DL': 'Digital Libraries',
    'DM': 'Discrete Mathematics',
    'DC': 'Distributed, Parallel, and Cluster Computing',
    'ET': 'Emerging Technologies',
    'FL': 'Formal Languages and Automata Theory',
    'GT': 'Computer Science and Game Theory',
    'GL': 'General Literature',
    'GR': 'Graphics',
    'AR': 'Hardware Architecture',
    'HC': 'Human-Computer Interaction',
    'IR': 'Information Retrieval',
    'IT': 'Information Theory',
    'LG': 'Machine Learning',
    'LO': 'Logic in Computer Science',
    'MS': 'Mathematical Software',
    'MA': 'Multiagent Systems',
    'MM': 'Multimedia',
    'NI': 'Networking and Internet Architecture',
    'NE': 'Neural and Evolutionary Computation',
    'NA': 'Numerical Analysis',
    'OS': 'Operating Systems',
    'OH': 'Other',
    'PF': 'Performance',
    'PL': 'Programming Languages',
    'RO': 'Robotics',
    'SI': 'Social and Information Networks',
    'SE': 'Software Engineering',
    'SD': 'Sound',
    'SC': 'Symbolic Computation',
    'SY': 'Systems and Control',
}

_acm_to_arxiv = {
    'Artificial intelligence': 'AI',
    'Software and application security': 'CR',
    'Dependable and fault-tolerant systems and networks': 'DC',
    'Document management and text processing': 'DL',
    'Systems security': 'CR',
    'Human computer interaction (HCI)': 'HC',
    'Real-time systems': 'PF',
    'Software notations and tools': 'SE',
    'Very large scale integration design': 'AR',
    'Models of computation': 'CC',
    'Randomness,  geometry and discrete structures': 'CG',
    'Network protocols': 'NI',
    'Security in hardware': 'CR',
    'Education': 'CY',
    'Machine learning': 'LG',
    'Robustness': 'AR',
    'Network security': 'CR',
    'Human and societal aspects of security and privacy': 'CY',
    'Semantics and reasoning': ['LO', 'PL'],
    'Parallel computing methodologies': 'DC',
    'Network architectures': 'NI',
    'Network performance evaluation': ['NI', 'PF'],
    'Professional topics': 'CY',
    'Information systems applications': 'SI',
    'Network types': 'NI',
    'Life and medical sciences': 'SI',
    'Network properties': 'NI',
    'User characteristics': 'CY',
    'Probability and statistics': 'DM',
    'Software creation and management': 'SE',
    'Network components': 'NI',
    'Software organization and properties': 'SE',
    'Law,  social and behavioral sciences': 'CY',
    'Emerging technologies': 'ET',
    'Data management systems': 'DB',
    'Physical sciences and engineering': 'CE',
    'Discrete mathematics': 'DM',
    'Distributed computing methodologies': 'DC',
    'Network services': 'NI',
    'Information storage systems': 'IR',
    'Computer forensics': 'OH',
    'Mathematical software': 'MS',
    'Collaborative and social computing': 'SI',
    'Continuous mathematics': 'OH',
    'Formal methods and theory of security': 'CR',
    'Ubiquitous and mobile computing': 'OH',
    'Arts and humanities': 'OH',
    'Formal languages and automata theory': 'FL',
    'Design and analysis of algorithms': 'DS',
    'Document types': 'OH',
    'Computing / technology policy': 'CY',
    'Electronic design automation': 'OH',
    'Database and storage security': ['DB', 'CR'],
    'Symbolic and algebraic manipulation': 'SC',
    'Network algorithms': ['DS', 'NI'],
    'Computer graphics': 'GR',
    'Intrusion/anomaly detection and malware mitigation': 'CR',
    'Cryptography': 'CR',
    'Logic': 'LO',
    'Interaction design': 'HC',
    'Information retrieval': 'IR',
    'Computational complexity and cryptography': ['CR', 'CC'],
    'Security services': 'CR',
    'Visualization': 'HC',
    'Information theory': 'IT',
    'Communication hardware,  interfaces and storage': 'SY',
    'Embedded and cyber-physical systems': 'SY',
    'Accessibility': 'HC',
    'Concurrent computing methodologies': 'DC',
    'Mathematical analysis': 'NA'
}


def map_acm_to_arxiv(subjects):
    result = []
    for s in subjects:
        if s in _acm_to_arxiv:
            arxiv_codes = _acm_to_arxiv[s]
            if isinstance(arxiv_codes, list):
                result.extend([_arxiv_categories[code] for code in arxiv_codes])
            else:
                result.append(_arxiv_categories[arxiv_codes])
    return result


def parse_arxiv_code(arxiv_code):
    return _arxiv_categories[arxiv_code]
